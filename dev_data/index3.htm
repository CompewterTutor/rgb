<!DOCTYPE html>
<html>
 <head>
  <meta http-equiv="Content-type" content="text/html; charset=utf-8">
  <link rel="stylesheet" type="text/css" href="css/build.css?v08.06.2017">
  <link rel="stylesheet" type="text/css" href="css/build.css">
  <!-- <link rel="stylesheet" type="text/css" href="css/bootstrap.min.css">
<link rel="stylesheet" type="text/css" href="css/style.css"> -->
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Device Page</title>
  <script type="text/javascript">
   var xhttp=createXmlHttpObject();
   function createXmlHttpObject(){
    if(window.XMLHttpRequest){
     xhttp=new XMLHttpRequest();
    }else{
     xhttp=new ActiveXObject('Microsoft.XMLHTTP');
    }
    return xhttp;
   }

   window.onload = function() {
    deviceList('first');
   }


   function findDevice(submit) {
    document.getElementById('content').innerHTML='<div class="alert alert-dismissible alert-info"><div class="loader"><\/div><strong><center>Пожалуйста подождите, идет сканирование сети.<\/center><\/strong><\/div>';
    ajax(window.location.hostname,'devices.scan.json',submit, '1');
    deviceList('search');
   }

   function deviceList(stage,sorting) {
    document.getElementById('content').innerHTML='';

    //document.getElementById("content").innerHTML = '<div class="col-md-12"><div class="block"><h5 class="alert-info">{{LangDevices}}<\/h5><table id="table-content" class="table table-striped table-hover" style="width:100%;text-align:left;"><\/table><\/div><\/div>';
    //document.getElementById("content").innerHTML += '<div class="col-md-6"><div class="block"><h5 class="alert-default">Sensors<\/h5><table id="table-sensors" class="table table-striped table-hover" style="width:100%;text-align:left;"><\/table><\/div><\/div>';
    //document.getElementById("content").innerHTML += '<div class="col-md-6"><div class="block"><h5 class="alert-warning">{{LangTimer}}<\/h5><table id="table-timers" class="table table-striped table-hover" style="width:100%;text-align:left;"><\/table><\/div><\/div>';

    var xhttp=createXmlHttpObject();
    xhttp.open("GET", "/devices.list.json?"+Math.floor(Math.random()*10000), true);
    xhttp.send(null);
    xhttp.onload = function(e) {
     var ipModule=JSON.parse(xhttp.responseText);
     var allModules = [];
     var allSpace = [];
     for(var key in ipModule) {
      var ipval = ipModule[key].ip;
      if (ipval == '0.0.0.0') {location.href = "/page.htm?first-connect";}
      if (stage == 'search') {
       loadBlock(ipval,ipModule[key].space,'first',ipModule[key].module);
      }
      // Сортировка
      if (stage == 'first' && sorting == null || searchModule(ipModule[key].module,sorting) == 'yes' || ipModule[key].space == sorting) {

       loadBlock(ipval,ipModule[key].space,'first',ipModule[key].module);
      }
      for (var s in ipModule[key].module) {
       // if (ipModule[key].module[s] != 'ntp' && ipModule[key].module[s] != 'ddns' && ipModule[key].module[s] != 'timers' && ipModule[key].module[s] != 'mqtt')
       allModules.push(ipModule[key].module[s]);
      }
      allSpace.push(ipModule[key].space);
     }
     //   if (stage == 'first' || stage == 'search') {
     //    var spaceArray = [];
     //    var space_lookup  = {};
     //    for (var i in allSpace) {space_lookup[allSpace[i]] = allSpace[i];}
     //    for (i in space_lookup) {spaceArray.push(space_lookup[i]);}
     //    if (spaceArray.length == 1) {toggle('sorting-space','show');}
     //    document.getElementById("sorting-space").innerHTML = '<h5 class="alert-default">{{LangSorting}}<\/h5><input type="button" class="btn btn-default" value="all" onclick="deviceList(\'first\');">';
     //    for(var key in spaceArray) {
     //     if (spaceArray[key]) document.getElementById("sorting-space").innerHTML += '<input type="button" class="btn btn-default" onclick="deviceList(\'first\',\''+spaceArray[key]+'\')" value="'+spaceArray[key]+'">';
     //    }
     //    var moduleArray = [];
     //    var lookup  = {};
     //    for (var i in allModules) {lookup[allModules[i]] = allModules[i];}
     //    for (i in lookup) {moduleArray.push(lookup[i]);}
     //    if (ipModule.length == 1) {toggle('sorting-module','show');}
     //    document.getElementById("sorting-module").innerHTML = '<h5 class="alert-default">{{LangSorting}}<\/h5><input type="button" class="btn btn-sm btn-default" value="all" onclick="deviceList(\'first\');">';
     //    for(var key in moduleArray) {
     //     if (moduleArray[key]) document.getElementById("sorting-module").innerHTML += '<input type="button" class="btn btn-sm btn-default" onclick="deviceList(\'first\',\''+moduleArray[key]+'\')" value="'+moduleArray[key]+'">';
     //    }
     //   }
    }
   }


   function loadBlock(ipval, content, stage, modules) {

    if (!modules) {
     var xhttp=createXmlHttpObject();
     xhttp.open("GET", "http://"+ipval+"/modules.json", true);
     xhttp.send(null);
     xhttp.onload = function(e) {
      var jsonResponse3=JSON.parse(xhttp.responseText);
      loadBlock2(jsonResponse3.module,stage);
     }
    } else {
     loadBlock2(modules,stage);
    }

    function loadBlock2(modules,stage){
     var xhttp=createXmlHttpObject();
     xhttp.open("GET", "http://"+ipval+"/config.live.json?"+Math.floor(Math.random()*10000), true);
     xhttp.send(null);
     xhttp.onload = function(e) {
      var jsonResponse1 = JSON.parse(xhttp.responseText);

      xhttp.open("GET", "http://"+ipval+"/lang/lang."+jsonResponse1.lang+".json", true);
      xhttp.send(null);
      xhttp.onload = function(e) {
       var jsonResponse2=JSON.parse(xhttp.responseText);
       var jsonResponse = Object.assign(jsonResponse1, jsonResponse2);
       var theCookies = document.cookie.split(';');
       for (var i = 1 ; i <= theCookies.length; i++) {
        jsonResponse[theCookies[i-1].split("=")[0].replace(/^ /,'')] = theCookies[i-1].split("=")[1];
       }




       if (searchModule(modules,"relay") == 'yes'){
        if (stage == 'first'){loadElement(jsonResponse.ip,jsonResponse.SSDP,jsonResponse.space,'relay','danger',content);}
        document.getElementById("button-"+ipval+"-relay").innerHTML='<input onclick="ajax(\''+jsonResponse.ip+'\',\'relay\',this);" value="'+(jsonResponse.state=='0'?jsonResponse.LangOn:jsonResponse.LangOff)+'" class="btn btn-'+(jsonResponse.state=='0'?'primary':'info')+'" type="button">';
       }


       if (searchModule(modules,"rgb") == 'yes'){
        if (stage == 'first'){loadElement(jsonResponse.ip,jsonResponse.SSDP,jsonResponse.space,'rgb','info',content);}
        document.getElementById("button-"+ipval+"-rgb").innerHTML='<input onclick="ajax(\''+jsonResponse.ip+'\',\'rgb\',this);" value="'+(jsonResponse.stateRGB=='0'?jsonResponse.LangOn:jsonResponse.LangOff)+'" class="btn btn-'+(jsonResponse.stateRGB=='0'?'primary':'info')+'" type="button">';
       }

       if (searchModule(modules,"jalousie") == 'yes'){
        if (stage == 'first'){loadElement(jsonResponse.ip,jsonResponse.SSDP,jsonResponse.space,'jalousie','success',content);}
        document.getElementById("button-"+ipval+"-jalousie").innerHTML='<input onclick="ajax(\''+jsonResponse.ip+'\',\'jalousie\',this);" value="'+(jsonResponse.state=='0'?jsonResponse.LangOn:jsonResponse.LangOff)+'" class="btn btn-'+(jsonResponse.state=='0'?'primary':'info')+'" type="button">';
       }



       if (stage == 'first'){
        if (searchModule(modules,"timers") == 'yes'){
         loadTimers(ipval,content,jsonResponse);
        }
        if (searchModule(modules,"temperature") == 'yes'){
         loadSensors(ipval,'table-sensors',jsonResponse);
        }
        if (searchModule(modules,"analog") == 'yes'){
         loadAnalog(ipval,'table-sensors',jsonResponse);
        }
       }



       if (window.location.hostname == ipval) {
        var new_string2;
        var bodyData = document.getElementsByTagName('body')[0].innerHTML;
        for (var key in jsonResponse) {
         new_string2 = bodyData.replace(new RegExp('{{'+key+'}}', 'g'), jsonResponse[key]);
         bodyData = new_string2;
        }
        document.getElementsByTagName('body')[0].innerHTML = new_string2;
        loadBuild(jsonResponse.spiffsData, jsonResponse.LangUpgrade);
       }








      }
     }
    }
   }




   function loadElement(ipVal, ssdpVal, spaceVal, moduleVal, classVal, contentVal) {
    var element =  document.getElementById(contentVal);
    if (typeof(element) != 'undefined' && element != null && element != ''){
     element.innerHTML += '<tr><td><span class="label label-'+classVal+'">'+moduleVal+'<\/span> <\/td><td> <b><a href="http://'+ipVal+'">'+ssdpVal+'<\/a><\/b> <\/td><td style="text-align:right;"><span id="button-'+ipVal+'-'+moduleVal+'"><input onclick="ajax(\''+ipVal+'\',\''+moduleVal+'\',this);" value="Off/On" class="btn btn-primary" type="button"><\/span><div class="btn-group pull-right"><a href="http://'+ipVal+'/page.htm?'+moduleVal+'" class="btn btn-default"><i class="set-img"><\/i><\/a><a href="http://'+ipVal+'/page.htm?setup" class="btn btn-default"><i class="opt-img"><\/i><\/a><\/div><\/tr><\/td> <tr><td><\/td><td id="timers-'+ipVal+'" colspan="2"><\/td><\/tr>';
    } else {
     document.getElementById('content').innerHTML += '<div class="col-md-6"><div class="block"><h5 class="alert-info">'+spaceVal+'<\/h5><table style="width:100%;" id="'+contentVal+'"><tr><td><span class="label label-'+classVal+'">'+moduleVal+'<\/span> <\/td><td> <b><a href="http://'+ipVal+'">'+ssdpVal+'<\/a><\/b> <\/td><td style="text-align:right;"><span id="button-'+ipVal+'-'+moduleVal+'"><input onclick="ajax(\''+ipVal+'\',\''+moduleVal+'\',this);" value="Off/On" class="btn btn-primary" type="button"><\/span><div class="btn-group pull-right"><a href="http://'+ipVal+'/page.htm?'+moduleVal+'" class="btn btn-default"><i class="set-img"><\/i><\/a><a href="http://'+ipVal+'/page.htm?setup" class="btn btn-default"><i class="opt-img"><\/i><\/a><\/td><\/tr> <tr><td><\/td><td id="timers-'+ipVal+'" colspan="2"><\/td><\/tr><\/table><\/div><\/div><\/div>';
    }
   }

   function loadTimers(ipval, content, jsonResponse) {
    var xmlHttp=createXmlHttpObject();
    xmlHttp.open("GET", "http://"+ipval+"/timer.save.json", true);
    xmlHttp.send(null);
    xmlHttp.onload = function(e) {
     var timers=JSON.parse(xmlHttp.responseText);
     timers.timer.sort(function(a,b){return (a.time > b.time) ? 1 : ((b.time > a.time) ? -1 : 0);});
     var timerList = '';
     for (var i = 0; i < timers.timer.length; i++) {
      if (timers.timer[i].trigger == "on") {timers.timer[i].trigger = '<span class="label label-success">'+jsonResponse["LangOn."]+'<\/span>';}
      if (timers.timer[i].trigger == "off") {timers.timer[i].trigger = '<span class="label label-danger">'+jsonResponse["LangOff."]+'<\/span>';}
      if (timers.timer[i].trigger == "not") {timers.timer[i].trigger = '<span class="label label-info">'+jsonResponse["LangSwitch."]+'<\/span>';}
      timers.timer[i].day = jsonResponse["Lang"+timers.timer[i].day];
      timerList += '<a class="label label-default" href="http://'+jsonResponse.ip+'/timer.htm">'+jsonResponse.LangTimer+'<\/a> '+timers.timer[i].trigger+' '+timers.timer[i].day.substring(0,7)+'. '+timers.timer[i].time+'<br>';
     }
     document.getElementById("timers-"+ipval).innerHTML+=''+(timerList?timerList:'')+'';
    }
   }


   function loadSensors(ipval, content, jsonResponse) {
    var xmlHttp=createXmlHttpObject();
    xmlHttp.open("GET", "http://"+ipval+"/sensor.json", true);
    xmlHttp.send(null);
    xmlHttp.onload = function(e) {
     var sensors=JSON.parse(xmlHttp.responseText);
     document.getElementById("timers-"+ipval).innerHTML+='<a class="label label-default" href="http://'+jsonResponse.ip+'/page.htm?chart&sensor">'+sensors.title+'<\/a> <b>'+sensors.data+(sensors.data2?', '+sensors.data2:'')+(sensors.data3?', '+sensors.data3:'')+'<\/b><br>';
    }
   }

   function loadAnalog(ipval, content, jsonResponse) {
    var xmlHttp=createXmlHttpObject();
    xmlHttp.open("GET", "http://"+ipval+"/analog.json", true);
    xmlHttp.send(null);
    xmlHttp.onload = function(e) {
     var sensors=JSON.parse(xmlHttp.responseText);
     document.getElementById("timers-"+ipval).innerHTML+='<a class="label label-default" href="http://'+jsonResponse.ip+'/page.htm?chart&analog">'+sensors.title+'<\/a> <b>'+sensors.data+'<\/b><br>';
    }
   }

   function searchModule(modules,find) {
    for(var key in modules) {
     if (modules[key] == find) {
      return "yes";
     }
    }
   }

   function ajax(ipHost, pagename, submit, loadB) {
    var old_submit = submit.value;
    var d = new Date(); // for now
    var datetext = d.getHours()+":"+d.getMinutes()+":"+d.getSeconds();
    var parent = '';
    //var parent = submit.parentNode.childNodes[1].innerHTML;
    var parent = submit.parentNode.parentNode.children[0].innerHTML;
    document.getElementById('history').insertAdjacentHTML('afterbegin', '<li><span class="label label-default">&#8987; '+datetext+'<\/span><span class="history" style="cursor:pointer" onclick="toggle(\'hide-'+datetext+'\');return false"><b>'+parent+'<\/b><br><em>'+old_submit+'<\/em><small class="hidden" id="hide-'+datetext+'"><hr>URL: <a href="http://'+ipHost+'/'+pagename+'">http://'+ipHost+'/'+pagename+'<\/a><\/small><\/span><\/li>');
    submit.value = 'Loading...';
    submit_disabled(true);
    var xhttp=createXmlHttpObject();
    xhttp.open("GET", "http://"+ipHost+"/"+pagename, true);
    xhttp.send(null);
    xhttp.onload = function(e) {
     submit.value=old_submit;
     submit_disabled(false);
     if (!loadB) {loadBlock(ipHost,'block-'+ipHost, '');}
    }
   }

   function submit_disabled(request){
    var inputs = document.getElementsByTagName("input");
    for (var i = 0; i < inputs.length; i++) {
     if (inputs[i].type === 'submit') {inputs[i].disabled = request;}
    }
   }

   function toggle(target,status) {
    var curVal = document.getElementById(target).classList;
    if (curVal.contains('hidden')) {
     if (status != 'show') {
      curVal.remove('hidden');
      curVal.add('show');
     }
    } else {
     if (status != 'hidden') {
      curVal.remove('show');
      curVal.add('hidden');
     }
    }
   }

   function val(id,val){
    if (val) {
     document.getElementById(id).value=(val==' '?'':val);
    } else {
     var v = document.getElementById(id).value;
     return v;
    }
   }

   function setCookie(name, value, days, submit) {
    if (days) {
     var date = new Date();
     date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
     var expires = "; expires=" + date.toGMTString();
    }
    else expires = "";
    document.cookie = name + "=" + value + expires + "; path=/";
    submit.parentNode.classList.add('hidden');
   }

   function hide(name, submit) {
    // if (confirm(jsonResponse.LangHedden)) {
    submit.parentNode.classList.add('hidden');
    setCookie(name,'hidden',365,submit);
    // }
   }

   function loadBuild(spiffs, LangUpgrade){
    var xmlHttp=createXmlHttpObject();
    xmlHttp.open('GET','https://api.github.com/repos/renat2985/rgb/contents/build',true);
    xmlHttp.send(null);
    xmlHttp.onload = function(e) {
     var jsonBuild=JSON.parse(xmlHttp.responseText);
     jsonBuild.sort(function(a,b){return (a.name< b.name) ? 1 : ((b.name < a.name) ? -1 : 0);});
     if (jsonBuild[0].name != spiffs) {
      document.getElementById('update').innerHTML = '<a href="/upgrade?spiffs=http://backup.privet.lv/esp/rgb/'+jsonBuild[0].name+'&build=http://backup.privet.lv/esp/rgb/build.0x00000'+jsonBuild[0].name.substring(14)+'" onclick="return confirm(\''+LangUpgrade+'\')"><i class="warning-img"><\/i><\/a>';
     }
    }
   }
  </script>
 </head>
 <body>
  <div class="container device">
   <div class="header">
    <div class="btn-group pull-right" style="margin-top:35px;">
     <a href="#" class="btn btn-default" onclick="deviceList('first');"><i class="refresh-img"></i></a>
     <a href="#" class="btn btn-default dropdown-toggle" onclick="toggle('help');"><i class="help-img"></i> <span class="hidden-xs">{{LangHelp}}</span> <span class="caret"></span></a>
     <ul class="dropdown-menu hidden" id="help"><li><a href="https://github.com/tretyakovsa/Sonoff_WiFi_switch/issues" target="_blank"><b>Sonoff</b> (Relay)</a></li><li><a href="https://github.com/renat2985/rgb/issues" target="_blank"><b>RGB</b> (WS2811-12/NeoPixel)</a></li><li><a href="https://github.com/tretyakovsa/jaluzi/issues" target="_blank"><b>Jalousie</b> (Motor/Servo)</a></li></ul>
    </div>
    <div class="pull-right" style="margin-top:35px;margin-right:5px">
     <input class="btn btn-info" value="{{LangSearch3}}" onclick="findDevice(this);window.scrollTo(0,0);" type="button">
     <div class="btn-group">
      <a href="#" class="btn btn-warning dropdown-toggle" onclick="toggle('skins');">{{LangDesign}} <span class="caret"></span></a>
      <ul class="dropdown-menu hidden" id="skins"><li><a href="/index.htm"><b>Default</b></a></li><li><a href="/index2.htm"><b>Inline</b></a></li><li><a href="/index3.htm"><b>Block</b></a></li></ul>
     </div>
    </div>
    <h1>{{space}}<br><small class="show">{{SSDP}}<sup id="update"></sup></small></h1>
   </div>
   <div class="col-sm-12 col-md-3">
    <h5 style="background-color:#C0C7CA;cursor:pointer" class="hidden-xs" onclick="toggle('history');return false">{{LangHistory}}</h5>
    <ul id="history" class="hidden" style="background-color:#fff;padding-bottom:10px;padding-top:10px;position:absolute;"></ul>
   </div>
   <div class="col-md-12" id="content"></div>
  </div>
 </body>
</html>
