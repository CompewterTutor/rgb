<!DOCTYPE html>
<html>
 <head>
  <meta http-equiv="Content-type" content="text/html; charset=utf-8">
  <script src="js/build.chart.js?v06.06.2017" charset="utf-8"></script>
  <!-- <link rel="stylesheet" type="text/css" href="css/chartist.min.css">
<script src="js/chartist.min.js" charset="utf-8"></script>
<script type="text/javascript" src="js/chart.js"></script> -->
  <link rel="stylesheet" type="text/css" href="css/build.css?v06.06.2017">
  <!-- <link rel="stylesheet" type="text/css" href="css/bootstrap.min.css">
<link rel="stylesheet" type="text/css" href="css/style.css"> -->
  <script type="text/javascript" src="js/function.js?v06.06.2017"></script>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title></title>
  <script type="text/javascript">

   var pages = window.location.search.substring(1).split("&");
   var jsonResponse;

   document.onkeydown = function(e){
    var evtobj = window.event? event : e
    let charCode = String.fromCharCode(evtobj.which).toLowerCase();
    if (charCode === 'm' && evtobj.ctrlKey) {toggle('edit-content');toggle('url-content');}
    if (charCode === 's' && evtobj.ctrlKey) {
     evtobj.preventDefault();send_request_edit(this, val('edit-json'), pages[0]+'.json');toggle('edit-content');toggle('url-content');
    }
   }


   function selectTextareaLine(tarea,lineNum) {
    lineNum--;
    var lines = tarea.value.split("\n");
    var startPos = 0, endPos = tarea.value.length;
    for(var x = 0; x < lines.length; x++) {
     if(x == lineNum) {break;}
     startPos += (lines[x].length+1);
    }
    var endPos = lines[lineNum].length+startPos;
    if(typeof(tarea.selectionStart) != "undefined") {
     tarea.focus();
     tarea.selectionStart = startPos;
     tarea.selectionEnd = endPos;
     return true;
    }
    return false;
   }


   function isValidJson(str) {
    try {
     JSON.parse(str);
     document.getElementById('edit-json').style.border = "";
     html("error-json",' ');
    } catch (e) {
     document.getElementById("edit-json").style.border = "2px solid red";
     html("error-json",'<div class="alert alert-danger">'+e.message+'<\/div><br><br><br>');
     return false;
    }
    return true;
   }

   window.onload = function() {
    setContent('first');
   }

   function setContent(stage) {
    var xmlHttp=createXmlHttpObject();

    if (!pages[0]) { pages[0]='index'; }

    xmlHttp.open('GET', pages[0]+".json",true);
    xmlHttp.send(null);
    xmlHttp.onload = function(e) {

     var jsonPage;
     if (xmlHttp.status==200){
      jsonPage=JSON.parse(xmlHttp.responseText);
      var jsonEdit=xmlHttp.responseText;


      if(xmlHttp.readyState==0 || xmlHttp.readyState==4){
       xmlHttp.open('PUT', jsonPage.config,true);
       xmlHttp.send(null);
       xmlHttp.onload = function(e) {

        var jsonResponse1;
        if (xmlHttp.status==200){
         jsonResponse1=JSON.parse(xmlHttp.responseText);
        } else { jsonResponse1 = '[{"error":"File not found"}]'; }

        xmlHttp.open('GET', renameBlock(jsonResponse1, jsonPage.lang),true);
        xmlHttp.send(null);
        xmlHttp.onload = function(e) {


         var jsonResponse2;
         if (xmlHttp.status==200){
          jsonResponse2=JSON.parse(xmlHttp.responseText);
         } else { jsonResponse1 = '[{"error":"File not found"}]'; }


         xmlHttp.open('GET','/modules.json',true);
         xmlHttp.send(null);
         xmlHttp.onload = function(e) {

          var modules;
          if (xmlHttp.status==200){
           var modules=JSON.parse(xmlHttp.responseText);
          } else { modules = '[{"error":"File not found"}]'; }

          jsonResponse = Object.assign(jsonResponse1, jsonResponse2);
          jsonResponse.module = modules.module;

          for (var i=0; i < pages.length; i++) {
           jsonResponse["urlArray"+[i]] = pages[i];
          }

          var theCookies = document.cookie.split(';');
          for (var i = 1 ; i <= theCookies.length; i++) {
           jsonResponse[theCookies[i-1].split("=")[0].replace(/^ /,'')] = theCookies[i-1].split("=")[1];
          }

          document.title = renameBlock(jsonResponse, jsonPage.title);
          document.getElementById('title').innerHTML = renameBlock(jsonResponse, jsonPage.title);
          document.getElementById("contents").className = jsonPage.class;
          document.getElementById("contents").style = jsonPage.style;
          document.getElementById('contents').innerHTML = '';

          if (jsonPage.reload) {
           set_real_time = setTimeout("setContent('edit')", jsonPage.reload);
          }

          if (stage == 'first') {
           document.body.innerHTML += '<a href="/donate.htm" class="hidden-xs btn btn-link" target="_blank" style="position:fixed;bottom:0px;">'+(jsonResponse.LangDonate?jsonResponse.LangDonate:'')+'<\/a>';
           val('edit-json', jsonEdit);
           toggle('content','hide');
          } else {
           jsonPage=JSON.parse(val('edit-json'));
          }

          val('edit-butt','view');

          for(i = 0;i<jsonPage.content.length;i++) {

           if (!jsonPage.content[i].module || searchModule(jsonResponse.module,jsonPage.content[i].module)=='yes') {

            var action_val = renameGet(jsonPage.content[i].action);
            var name_val = (jsonPage.content[i].name?jsonPage.content[i].name:'');
            //    var title_val = renameBlock(jsonResponse, jsonPage.content[i].title);
            var class_val = (jsonPage.content[i].class?jsonPage.content[i].class:'');
            var style_val = (jsonPage.content[i].style?'style="'+jsonPage.content[i].style+'"':'');
            var pattern_val = (jsonPage.content[i].pattern?jsonPage.content[i].pattern:'');
            var state_val = renameBlock(jsonResponse, jsonPage.content[i].state);
            var module_val = jsonPage.content[i].module;

            var type_val=jsonPage.content[i].type;

            if (type_val == 'hr') {
             document.getElementById('contents').innerHTML += '<hr id="'+name_val+'" class="'+class_val+'" '+style_val+'>';
            }
            if (type_val == 'h1' || type_val == 'h2' || type_val == 'h3' || type_val == 'h4' || type_val == 'h5' || type_val == 'h6') {
             document.getElementById('contents').innerHTML += '<'+type_val+' id="'+name_val+'" class="'+class_val+'" '+style_val+'>'+renameBlock(jsonResponse, jsonPage.content[i].title)+'<\/'+type_val+'>';
            }
            if (type_val == 'input') {
             if (action_val) action_val = 'onfocusout="send_request(this, \''+(typeof module_val!='undefined'&&module_val?'cmd?module='+module_val+'&':'')+'\'+renameGet(\''+jsonPage.content[i].action+'\'))"';
             document.getElementById('contents').innerHTML += '<input '+action_val+' id="'+name_val+'" class="form-control '+class_val+'" '+style_val+' '+(pattern_val?'pattern="'+pattern_val+'"':'')+' placeholder="'+renameBlock(jsonResponse, jsonPage.content[i].title)+'" value="'+state_val+'">';
            }
            if (type_val == 'password') {
             if (action_val) action_val = 'onfocusout="send_request(this, \''+(typeof module_val!='undefined'&&module_val?'cmd?module='+module_val+'&':'')+'\'+renameGet(\''+jsonPage.content[i].action+'\'))"';
             document.getElementById('contents').innerHTML += '<input '+action_val+' id="'+name_val+'" class="form-control '+class_val+'" '+style_val+' '+(pattern_val?'pattern="'+pattern_val+'"':'')+' placeholder="'+renameBlock(jsonResponse, jsonPage.content[i].title)+'" value="'+state_val+'" onfocus="this.type=\'text\'" type="password">';
            }
            if (type_val == 'button') {
             if (action_val) action_val = 'onclick="send_request(this, \''+(typeof module_val!='undefined'&&module_val?'cmd?module='+module_val+'&':'')+'\'+renameGet(\''+jsonPage.content[i].action+'\'),\''+jsonPage.content[i].state+'\')"';
             document.getElementById('contents').innerHTML += '<input id="'+name_val+'" '+action_val+' class="'+class_val+'" '+style_val+' value="'+renameBlock(jsonResponse, jsonPage.content[i].title)+'" type="button">';
            }
            if (type_val == 'checkbox') {
             var checked = '';
             if (state_val == 1){ checked = 'checked'; }
             if (action_val) { action_val = 'onchange="val(this.id,(this.checked?\'1\':\'0\'));send_request(this, \''+(typeof module_val!='undefined'&&module_val?'cmd?module='+module_val+'&':'')+'\'+renameGet(\''+jsonPage.content[i].action+'\'))"'; } else { action_val = 'onchange="val(this.id,(this.checked?\'1\':\'0\'));"'; }
             document.getElementById('contents').innerHTML += '<label '+style_val+'><input id="'+name_val+'" value="'+state_val+'" '+action_val+' type="checkbox" class="'+class_val+'" '+checked+'> '+renameBlock(jsonResponse, jsonPage.content[i].title)+'<\/label>';
            }
            if (type_val == 'range') {
             if (action_val) action_val = 'onchange="send_request(this, \''+(typeof module_val!='undefined'&&module_val?'cmd?module='+module_val+'&':'')+'\'+renameGet(\''+jsonPage.content[i].action+'\'))"';
             document.getElementById('contents').innerHTML += '<label '+style_val+' style="display:block;"><h4>'+renameBlock(jsonResponse, jsonPage.content[i].title)+'<\/h4> <input id="'+name_val+'" class="form-control '+class_val+'" '+action_val+' '+pattern_val+' value="'+state_val+'" type="range"><\/label>';
            }
            if (type_val == 'table') {
             var thead = '';
             jsonTable = jsonPage.content[i].title;
             for(var key in jsonTable) {
              thead += '<th>'+renameBlock(jsonResponse, jsonTable[key])+'<\/th>';
             }
             document.getElementById('contents').innerHTML += '<table class="'+class_val+'" '+style_val+' id="'+name_val+'"><thead><tr>'+thead+'<\/tr><\/thead><tbody id="'+state_val.replace(/\./g, '-')+'"><\/tbody><\/table>';
             createTable(state_val, jsonTable);
            }
            if (type_val == 'select') {
             if (action_val) action_val = 'onchange="send_request(this, \''+(typeof module_val!='undefined'&&module_val?'cmd?module='+module_val+'&':'')+'\'+renameGet(\''+jsonPage.content[i].action+'\'))"';
             var option = '';
             jsonSelect = jsonPage.content[i].title;
             //jsonSelect = JSON.parse(renameBlock(jsonResponse, jsonPage.content[i].title));
             //jsonSelect = renameBlock(jsonResponse, jsonPage.content[i].title).slice(1, -1);
             for(var key in jsonSelect) {
              option += '<option value="'+renameBlock(jsonResponse, key)+'"'+(state_val==key?' selected':'')+'>'+renameBlock(jsonResponse, jsonSelect[key])+'<\/option>';
             }
             document.getElementById('contents').innerHTML += '<select class="form-control '+class_val+'" '+style_val+' '+action_val+' id="'+name_val+'">'+option+'<\/select>';
            }

            if (type_val == 'link') {
             document.getElementById('contents').innerHTML += '<a id="'+name_val+'" class="'+class_val+'" '+style_val+' href="'+renameGet(jsonPage.content[i].action)+'">'+renameBlock(jsonResponse, jsonPage.content[i].title)+'<\/a>';
            }
            if (type_val == 'text') {
             document.getElementById('contents').innerHTML += '<div id="'+name_val+'" class="'+class_val+'" '+style_val+'>'+renameBlock(jsonResponse, jsonPage.content[i].title)+'<\/div>';
            }
            if (type_val == 'chart') {
             document.getElementById('contents').innerHTML += '<div id="'+name_val+'" class="'+renameBlock(jsonResponse, '{{'+state_val.replace(/\./g, '-')+'-hidden}}')+'"><button class="close" onclick="hide(\''+state_val.replace(/\./g, '-')+'-hidden\',this);" type="button">×<\/button><a href="'+renameGet(jsonPage.content[i].action)+'" target="_blank" class="close">'+(typeof action_val!='undefined'&&action_val?'<i class="popup-img"><\/i>':'')+'<\/a><div id="'+state_val.replace(/\./g, '-')+'" class="'+class_val+'" '+style_val+'><\/div><hr><\/div>';
             if (renameBlock(jsonResponse, '{{'+state_val.replace(/\./g, '-')+'-hidden}}') != 'hidden') {
              //var charTime;
              //clearTimeout(charTime);
              //charTime = setTimeout("loadChart('"+name_val+"','"+state_val+"')", 500);
              setTimeout("loadChart('"+state_val.replace(/\./g, '-')+"','"+state_val+"')", 500);
             }
            }
            if (type_val == 'lang') {
             document.getElementById('contents').innerHTML += '<div class="'+class_val+'" '+style_val+'><ul class="dropdown-menu hidden" id="'+name_val+'"><li><a href="#">'+renameBlock(jsonResponse, jsonPage.content[i].title)+'<\/a><\/li><\/ul><a href="#" class="btn btn-default dropdown-toggle" onclick="'+jsonPage.content[i].action+'return false">'+state_val+' <span class="caret"><\/span><\/a><\/div>';
            }
            if (type_val == 'wifi') {
             document.getElementById('contents').innerHTML += '<div class="btn-group btn-block" id="ssid-group"><a href="#" class="btn btn-default btn-block dropdown-toggle" onclick="toggle(\'ssid-select\');loadWifi(\'ssid-select\',\''+name_val+'\');return false"><span id="ssid-name">'+state_val+'<\/span> <span class="caret"><\/span><\/a><ul class="dropdown-menu hidden" id="ssid-select"><li><a href="#">'+jsonResponse.LangLoading+'<\/a><\/li><\/ul><\/div>';
             document.getElementById('contents').innerHTML += '<input id="'+name_val+'" value="'+state_val+'" class="form-control hidden '+class_val+'" '+style_val+' '+pattern_val+' placeholder="'+renameBlock(jsonResponse, jsonPage.content[i].title)+'">';
            }
            if (type_val == 'time') {
             document.getElementById('contents').innerHTML += '<h2 id="'+name_val+'" '+style_val+'>'+renameBlock(jsonResponse, jsonPage.content[i].title)+' <strong id="time" class="'+class_val+'">'+state_val+'<\/strong><\/h2>';
             clearTimeout(set_real_time);
             var res = jsonResponse.time.split(":");
             real_time(hours=res[0],min=res[1],sec=res[2]);
            }
            if (type_val == 'rgb') {
             document.getElementById('contents').innerHTML += '<div class="'+name_val+'-thumb '+class_val+'"><div class="'+name_val+'-preview"><\/div><img alt="" '+style_val+' src="'+renameBlock(jsonResponse, jsonPage.content[i].title)+'"><\/div><canvas id="'+name_val+'-cs" style="display:none"><\/canvas>';
             document.getElementById('contents').innerHTML += '<input id="'+name_val+'" value="'+state_val+'" class="form-control hidden">';
             setTimeout("createRGB('"+name_val+"', '"+jsonPage.content[i].action+"','"+module_val+"')", 500);
            }
            if (type_val == 'dev') {
             var dev_html = '<div id="'+name_val+'" class="'+class_val+'" '+style_val+'><a href="/help.htm" target="_blank" class="close"><i class="help-img"><\/i><\/a>'+renameBlock(jsonResponse, jsonPage.content[i].title)+'<span id="dev-update" class="hidden"><b>'+jsonResponse.LangSetting5+'<\/b>';
             dev_html += '<div class="btn-group"><a href="#" class="btn btn-default dropdown-toggle" onclick="toggle(\'repos-build\');return false">Build <span class="caret"><\/span><\/a><ul class="dropdown-menu hidden" id="repos-build" style="min-width:350px"><li><a href="#" onclick="toggle(\'sonoff-build\');loadBuild(\'sonoff\',\'build\');return false"><b>Sonoff<\/b> (Relay) <span class="caret"><\/span><\/a><a href="https://github.com/tretyakovsa/Sonoff_WiFi_switch/commits/master" style="float:right;margin-top:-27px" target="_blank"><i class="help-img"><\/i> History<\/a><ul class="hidden" id="sonoff-build" style="margin-right:20px"><li><a href="#">'+jsonResponse.LangLoading+'<\/a><\/li><\/ul><\/li><li><a href="#" onclick="loadBuild(\'rgb\',\'build\');return false"><b>RGB<\/b> (WS2811-12/NeoPixel) <span class="caret"><\/span><\/a><a href="https://github.com/renat2985/rgb/commits/master" style="float:right;margin-top:-27px" target="_blank"><i class="help-img"><\/i> History<\/a><ul class="hidden" id="rgb-build" style="margin-right:20px"><li><a href="#">Soon...<\/a><\/li><\/ul><\/li><\/ul><\/div>';
             dev_html += ' <div class="btn-group"><a href="#" class="btn btn-default dropdown-toggle" onclick="toggle(\'repos-spiffs\');return false">Spiffs <span class="caret"><\/span><\/a><ul class="dropdown-menu hidden" id="repos-spiffs" style="min-width:350px"><li><a href="#" onclick="toggle(\'sonoff-spiffs\');loadBuild(\'sonoff\',\'spiffs\');return false"><b>Sonoff<\/b> (Relay) <span class="caret"><\/span><\/a><a href="https://github.com/tretyakovsa/Sonoff_WiFi_switch/commits/master" style="float:right;margin-top:-27px" target="_blank"><i class="help-img"><\/i> History<\/a><ul class="hidden" id="sonoff-spiffs" style="margin-right:20px"><li><a href="#">'+jsonResponse.LangLoading+'<\/a><\/li><\/ul><\/li><li><a href="#" onclick="loadBuild(\'rgb\',\'spiffs\');return false""><b>RGB<\/b> (WS2811-12/NeoPixel) <span class="caret"><\/span><\/a><a href="https://github.com/renat2985/rgb/commits/master" style="float:right;margin-top:-27px" target="_blank"><i class="help-img"><\/i> History<\/a><ul class="hidden" id="rgb-spiffs" style="margin-right:20px"><li><a href="#">Soon...<\/a><\/li><\/ul><\/li><\/ul><\/div>';
             dev_html += '<br><b><a href="#" onclick="toggle(\'repos-bin\');return false">'+jsonResponse.LangSetting6+'<\/a><\/b><span id="repos-bin" class="hidden"><b>GitHub: <a href="https://github.com/renat2985/rgb/tree/master/build" target="_blank">RGB<\/a>, <a href="https://github.com/tretyakovsa/Sonoff_WiFi_switch/tree/master/build" target="_blank">Sonoff<\/a>, <a href="https://github.com/tretyakovsa/jaluzi/tree/master/build" target="_blank">Jalousie<\/a><\/b><form method="POST" action="/update" enctype="multipart/form-data"><div class="btn-group"><input type="file" class="btn btn-primary btn-xs" name="update" style="height:33px" accept=".bin"><input type="submit" class="btn btn-default btn-sm" value="Download" onclick="this.value=\''+jsonResponse.LangLoading+'\';" style="height:33px"><\/div><\/form><\/span>';
             dev_html += '<\/span><\/div>';
             document.getElementById('contents').innerHTML += dev_html;
            }


           }
          }

         }


        }
       }
      }
     } else {
      jsonPage = '[{"error":"File not found"}]';
      document.getElementById('contents').innerHTML += '<br><br><h1>Files "'+pages[0]+'.json" not found.<\/h1><hr><h2>Please add json file in you folder.<br>Example: device.json and join on page.htm?device<\/h2>';
      toggle('content','hide');
     }
    }


   };


   function createTable(state_val, jsonTable) {
    var xmlHttp=createXmlHttpObject();
    xmlHttp.open("GET", state_val, true);
    xmlHttp.send(null);
    xmlHttp.onload = function(e) {
     var timers=JSON.parse(xmlHttp.responseText);
     for (var i = 0; i < timers.timer.length; i++) {
      var tbody = '';
      for(var keys in jsonTable) {
       tbody += '<td>'+timers.timer[i][keys]+'<\/td>';
      }
      document.getElementById(state_val.replace(/\./g, '-')).innerHTML += '<tr>'+tbody+'<\/tr>';
     }
    }
   }

   function renameBlock(jsonResponse, str) {
    if (str) {
     var arr=str.match(/\{\{\S+?\}\}/gim);
     if (arr) {
      for (var i=0; i<arr.length; i++) {
       var id=arr[i].slice(2, -2);
       //if (jsonResponse[id]) {
       str = str.replace(new RegExp('{{'+id+'}}','g'), jsonResponse[id]);
       // }
      };
     }
    }
    return (typeof(str)!='undefined'&&str!=null?str:'');
   }


   function renameGet(str) {
    if (str) {
     var arr=str.match(/\[\[\S+?\]\]/gim);
     if (arr) {
      for (var i=0; i<arr.length; i++) {
       var id=arr[i].slice(2, -2);
       if (document.getElementById(id)) {
        var txt='';
        if (document.getElementById(id).tagName=='select'){
         txt=document.getElementById(id).options[document.getElementById(id).selectedIndex].value;
        } else {
         txt=document.getElementById(id).value;
        }
        str = str.replace(new RegExp('\\[\\['+id+'\\]\\]','g'), txt);
       }
      };
     }
    }
    return str;
   }


   function createRGB(valID,actionID,moduleID){
    var img = _('.'+valID+'-thumb img'),
        canvas = _('#'+valID+'-cs'),
        result = _('.'+valID+'-result'),
        preview = _('.'+valID+'-preview'),x = '',y = '';
    // click function
    img.addEventListener('click', function(e){
     // chrome
     if(e.offsetX) {x=e.offsetX;y=e.offsetY;}
     // firefox
     else if(e.layerX) {x=e.layerX;y=e.layerY;}
     useCanvas(canvas,img,function(){
      // get image data
      var p = canvas.getContext('2d').getImageData(x, y, 1, 1).data;
      // nex_color = rgbToHex(p[0],p[1],p[2]);
      //on_rgb(this,p[0],p[1],p[2]);
      // alert(p[0]+" "+p[1]+" "+p[2]);
      if (valID){val(valID, rgbToHex(p[0],p[1],p[2]));}
      if (actionID){send_request(valID, (moduleID!='undefined'?'cmd?module='+moduleID+'&':'')+renameGet(actionID)+'');}
      document.body.style.background = "#"+rgbToHex(p[0],p[1],p[2]);
     });
    },false);
    // preview function mousemove
    img.addEventListener('mousemove', function(e){
     // chrome
     if(e.offsetX) {x=e.offsetX;y=e.offsetY;}
     // firefox
     else if(e.layerX) {x=e.layerX;y=e.layerY;}
     useCanvas(canvas,img,function(){
      var p = canvas.getContext('2d').getImageData(x, y, 1, 1).data;
      // document.body.style.background = "#"+rgbToHex(p[0],p[1],p[2]);
     });
    },false);
   }
   function useCanvas(el,image,callback){
    el.width = image.width;
    el.height = image.height;
    el.getContext('2d').drawImage(image, 0, 0, image.width, image.height);
    return callback();
   }
   function _(el){
    return document.querySelector(el);
   };
   function componentToHex(c) {
    var hex = c.toString(16);
    return hex.length == 1 ? "0" + hex : hex;
   }
   function rgbToHex(r, g, b) {
    return componentToHex(r) + componentToHex(g) + componentToHex(b);
   }
   function findPos(obj) {
    var curleft = 0, curtop = 0;
    if (obj.offsetParent) {
     do {
      curleft += obj.offsetLeft;
      curtop += obj.offsetTop;
     } while (obj = obj.offsetParent);
     return { x: curleft, y: curtop };
    }
    return undefined;
   }
  </script>
 </head>
 <body>
  <div class="container loader-bg">

   <ul id="url-content" class="hidden" onclick="document.getElementById('contents').style.zIndex=0;"></ul>

   <div class="row hidden" id="content">
    <h1 id="title"></h1>
    <div id="contents" onclick="this.style.zIndex=10"></div>
   </div>

   <div id="edit-content" class="hidden" onclick="document.getElementById('contents').style.zIndex=0;">
    <textarea class="form-control" onkeyup="isValidJson(this.value)" spellcheck="false" id="edit-json"></textarea>
    <div id="error-json"></div>
    <div class="btn-group btn-block">
     <input class="btn btn-success" style="width:50%" id="edit-butt" onclick="setContent('edit');this.value='Loading...';" value="View" type="button">
     <input class="btn btn-danger" style="width:50%" onclick="send_request_edit(this, val('edit-json'), pages[0]+'.json');toggle('edit-content');toggle('url-content');" value="Save" type="button">
    </div>
   </div>

  </div>
 </body>
</html>
