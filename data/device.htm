<!DOCTYPE html>
<html lang="ru">
 <head>
  <meta http-equiv="Content-type" content="text/html; charset=utf-8">
  <link rel="stylesheet" href="/bootstrap.min.css">
  <link rel="stylesheet" type="text/css" href="/style.css">
  <script type="text/javascript" src="/function.js"></script>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Страница управления</title>
  <script type="text/javascript">
   function handleServerResponse(){
    var img = _('.thumb img'),
        canvas = _('#cs'),
        result = _('.result'),
        preview = _('.preview'),x = '',y = '';
    // click function
    img.addEventListener('click', function(e){
     // chrome
     if(e.offsetX) {
      x = e.offsetX;
      y = e.offsetY;
     }
     // firefox
     else if(e.layerX) {
      x = e.layerX;
      y = e.layerY;
     }
     useCanvas(canvas,img,function(){
      // get image data
      var p = canvas.getContext('2d').getImageData(x, y, 1, 1).data;
      r_rgb =p[0];
      g_rgb =p[1];
      b_rgb =p[2];
      document.getElementById('set-time').style.display="block";
      //on_rgb(this,p[0],p[1],p[2]);
     });
    },false);
    // preview function mousemove
    img.addEventListener('mousemove', function(e){
     // chrome
     if(e.offsetX) {
      x = e.offsetX;
      y = e.offsetY;
     }
     // firefox
     else if(e.layerX) {
      x = e.layerX;
      y = e.layerY;
     }
     useCanvas(canvas,img,function(){
      var p = canvas.getContext('2d').getImageData(x, y, 1, 1).data;
      preview.style.background = rgbToHex(p[0],p[1],p[2]);
     });
    },false);
    document.body.style.backgroundColor="rgb("+xml('rgb')+")";
   }

   function useCanvas(el,image,callback){
    el.width = image.width;
    el.height = image.height;
    el.getContext('2d').drawImage(image, 0, 0, image.width, image.height);
    return callback();
   }
   function _(el){
    return document.querySelector(el);
   };
   function componentToHex(c) {
    var hex = c.toString(16);
    return hex.length == 1 ? "0" + hex : hex;
   }
   function rgbToHex(r, g, b) {
    return "#" + componentToHex(r) + componentToHex(g) + componentToHex(b);
   }
   function findPos(obj) {
    var curleft = 0, curtop = 0;
    if (obj.offsetParent) {
     do {
      curleft += obj.offsetLeft;
      curtop += obj.offsetTop;
     } while (obj = obj.offsetParent);
     return { x: curleft, y: curtop };
    }
    return undefined;
   }

   function led(submit){
    server = "/led";
    send_request(submit,server);
   }
   function set_rgb(submit,r,g,b,t,s){
    document.body.style.background=rgbToHex(r,g,b,s);
    server = "/rgb?r="+r+"&g="+g+"&b="+b+"&t="+t+"&s="+val('sound')*10;
    document.getElementById('url1').innerHTML='http://'+document.domain+server;
    if(navigator.onLine) {
     var oReq = new XMLHttpRequest();
     oReq.open("GET","https://api.ipify.org?format=text",false);
     oReq.send();
     //oReq.onload = function(e) {
     document.getElementById('url2').innerHTML="http://"+oReq.responseText+server;
     //}
    }
    send_request(submit,server);
   }
   function on_rgb(submit,t){
    document.getElementById('set-time').style.display="none";
    set_rgb(submit,r_rgb,g_rgb,b_rgb,t);
   }
   function set_time(submit){
    server = "/TimeLed?t="+val('led');
    send_request(submit,server);
   }
   function set_time1(submit){
    server = "/times1?time1="+val('time1');
    send_request(submit,server);
   }
   function set_time2(submit){
    server = "/times2?time2="+val('time2');
    send_request(submit,server);
   }
  </script>
  <style type="text/css">
   #set-time {
    z-index:111;
    background-color:#fff;
    box-shadow:0 12px 15px rgba(0, 0, 0, 0.4);
    padding:20px;
    margin-top:-45%;
    position:relative;
   }
  </style>
 </head>
 <body onload="load();">
  <div class="container">
   <div class="row" style="text-align:center;">
    <h1 style="margin:50px;">Страница управления</h1>
    <div class="col-sm-offset-2 col-sm-8 col-md-offset-3 col-md-6">
     <h5 class="alert-info">{{SSDP}}</h5>
     <a class="btn btn-block btn-danger" href="/">Страница устройств</a>
     <hr>
     <div class="alert alert-dismissible alert-info">С помощью сервиса <a href="https://ifttt.com/myrecipes/personal" target="_blank">ifttt.com</a> Лампа может включатся по множествам сценариев, например: новое сообщение в facebook, twitter, <a href="#" onclick="toggle('hide');return false">подробнее...</a><span id="hide" class="hidden">задания в Google calendar, почта и многое другое. Включая led ниже формируется URL цвета, копируйте Global IP ссылку, создавайте новый сценарий на ifttt и вставляйте его в "Make a web request".<strong><br>Локальная ссылка: <u id="url1">Выберите цвет</u><br>Глобальная ссылка: <u id="url2">Выберите цвет</u></strong></span>
     </div>
     <div class="thumb">
      <div class="preview"></div>
      <img alt="" style="cursor:pointer;width:100%;" src="/swatches.png" />
     </div>
     <div class="row">
      <div class="col-sm-offset-3 col-sm-6" id="set-time" style="display:none;">
       <h5 class="alert-warning">Время</h5>
       <h4>На сколько минут включить?</h4>
       <div class="btn-group">
        <input type="submit" class="btn btn-primary btn-sm" onclick="on_rgb(this,60)" value="1">
        <input type="submit" class="btn btn-primary btn-sm" onclick="on_rgb(this,300)" value="5">
        <input type="submit" class="btn btn-primary btn-sm" onclick="on_rgb(this,600)" value="10">
        <input type="submit" class="btn btn-primary btn-sm" onclick="on_rgb(this,1500)" value="15">
        <input type="submit" class="btn btn-primary btn-sm" onclick="on_rgb(this,1800)" value="30">
       </div>
       <br>
       <div class="btn-group">
        <input type="submit" class="btn btn-primary btn-sm" onclick="on_rgb(this,3600)" value="60">
        <input type="submit" class="btn btn-primary btn-sm" onclick="on_rgb(this,5400)" value="1:30">
        <input type="submit" class="btn btn-primary btn-sm" onclick="on_rgb(this,7200)" value="2:00">
        <input type="submit" class="btn btn-primary btn-sm" onclick="on_rgb(this,10800)" value="3:00">
       </div>
       <hr>
       <h4>Время работы сигнала:</h4>
       <input class="form-control" value="0.1" id="sound">
       <hr>
       <a href="#" onclick="document.getElementById('set-time').style.display='none';return false" class="btn btn-block btn-default">Отмена</a>
      </div>
     </div>
     <canvas id="cs" style="display:none;"></canvas>
     <input type="submit" class="btn btn-block btn-primary" onclick="led(this);" value="Включить\Выключить">
     <hr>
     <h2>Будильники</h2>
     <div class="row">
      <div class="col-sm-6">
       <h4>Будильник 1:</h4>
       <input id="time1" value="{{times1}}" pattern="(0[0-9]|1[0-9]|2[0-3])(:[0-5][0-9]){2}" class="form-control">
       <input class="btn btn-block btn-success" value="Сохранить" onclick="set_time1(this);" type="submit">
       <h4>Будильник 2:</h4>
       <input id="time2" value="{{times2}}" pattern="(0[0-9]|1[0-9]|2[0-3])(:[0-5][0-9]){2}" class="form-control">
       <input class="btn btn-block btn-success" value="Сохранить" onclick="set_time2(this);" type="submit">
      </div>
      <div class="col-sm-6">
       <div class="alert alert-dismissible alert-warning"><b>Обратите внимание</b> Настраивая время перед одиночными цифрами пишите 0. Пример: 03:09:10.
        Будильник будит повторять звонить каждый день. Отключить его можно написав 00:00:00</div>
      </div>
     </div>
     <hr>
     <div class="row">
      <h2>Время работы будильника</h2>
      <div class="col-sm-8">
       <div class="alert alert-dismissible alert-info">Здесь указается время в секундах как долго будит звенеть будильник и гореть LED.</div>
      </div>
      <div class="col-sm-4">
       <div class="input-group">
        <input id="led" value="{{timeled}}" class="form-control" pattern="[0-9]*[.,]?[0-9]+">
        <span class="input-group-addon">сек.</span>
       </div>
       <input class="btn btn-block btn-success" value="Сохранить" onclick="set_time(this);" type="submit">
      </div>
     </div>
     <hr>
     <a class="btn btn-block btn-default" href="/setup.htm">Доп. настройки</a>
    </div>
   </div>
  </div>
 </body>
</html>
